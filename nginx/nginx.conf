# ==============================================================================
#  _____             _____ ____  _____ _____    _____
# |     |___ ___ ___|  _  |    \|     |   __|  |   __|___ ___ _ _ ___ ___
# |  |  | . | -_|   |     |  |  | | | |__   |  |__   | -_|  _| | | -_|  _|
# |_____|  _|___|_|_|__|__|____/|_|_|_|_____|  |_____|___|_|  \_/|___|_|
#       |_|
#
# Configuration file to run a REST interface with nginx and PostgreSQL. Tested
# with nginx 1.16 and PostgreSQL 11.5 on FreeBSD 12.
# ==============================================================================
# The following 3rd party modules are required:
#
#   * form-input
#   * headers-more
#   * http-realip
#   * lua
#   * postgres
#   * set-misc
#
# ==============================================================================
# Date:     2020-03-22
# Author:   Philipp Engel
# GitHub:   https://github.com/dabamos/openadms-server/
# ==============================================================================
# Load modules required modules on FreeBSD. On Linux, you have to change the
# paths according to your set-up.
load_module /usr/local/libexec/nginx/ndk_http_module.so;
load_module /usr/local/libexec/nginx/ngx_http_form_input_module.so;
load_module /usr/local/libexec/nginx/ngx_http_lua_module.so;
load_module /usr/local/libexec/nginx/ngx_http_headers_more_filter_module.so;
load_module /usr/local/libexec/nginx/ngx_http_set_misc_module.so;

user                www;                        # User to run nginx process under.
worker_processes    4;                          # Number of worker processes.
error_log           /var/log/nginx/error.log;   # Path to log file (or /dev/null/).

events {
    worker_connections  200;                    # Max. connections per worker.
}

http {
    include mime.types;

    charset             utf-8;
    default_type        application/json;
    access_log          /dev/null;
    keepalive_timeout   65;

    # Uncomment the following two lines to enables GZIP compression.
    # gzip                on;
    # gzip_types          text/csv text/plain application/json application/xml;

    # PostgreSQL connection details. Change "localhost" to the IP address of
    # your database instance, if it is not running on the same host, and enter
    # user name and passwort.
    #
    # dbname:   PostgreSQL database name.
    # user:     PostgreSQL user name.
    # password: PostgreSQL password.
    upstream postgresql {
        postgres_server     localhost dbname=timeseries user=<username> password=<password>;
        postgres_keepalive  max=200 overflow=reject;
    }

    # Include the mapped MIME types for OpenADMS Server.
    include openadms-server/map.conf;

    server {
        listen      80;                 # HTTP port. Change to 443 and add X.509 certificate.
        server_name www.example.com;    # CHANGE TO YOUR SERVER NAME!
        root        /var/www/;          # Root directory for static files.

        # Enable HTTP BasicAuth.
        auth_basic              "Restricted";
        auth_basic_user_file    /usr/local/etc/nginx/.htpasswd;

        # Serve the root directory /var/www/.
        location / {
            index    index.html index.htm;

            # Comment out the following lines if cross-origin resource sharing (CORS)
            # is already enabled.
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin'   '*';
                add_header 'Access-Control-Allow-Methods'  'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers'  'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Max-Age'        1728000;
                add_header 'Content-Type'                  'text/plain; charset=utf-8';
                add_header 'Content-Length'                0;
                return 204;
            }
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin'   '*';
                add_header 'Access-Control-Allow-Methods'  'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers'  'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin'   '*';
                add_header 'Access-Control-Allow-Methods'  'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers'  'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
        }
    }

        # Uncomment the following lines if you run nginx in front of an Apache
        # CouchDB 2 database server with CORS enabled. Access Futon web
        # interface: http://www.example.com/couchdb/_utils/.
        #
        # location = /couchdb/ {
        #     rewrite     /couchdb/(.*) /$1 break;
        #     proxy_pass  http://localhost:5984;
        #
        #     proxy_redirect   off;
        #     proxy_set_header "Host"                          $host;
        #     proxy_set_header "X-Forwarded-For"               $proxy_add_x_forwarded_for;
        #     proxy_set_header "Access-Control-Allow-Origin"  "$server_name";
        #     proxy_set_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, PUT, DELETE";
        #     proxy_set_header "Access-Control-Allow-Headers" "X-Requested-With, Accept, Content-Type, Origin";
        # }

        # If you are running `security/acme-client` to obtain X.509 certificates
        # from Let's Encrypt you may want to serve a directory for the
        # challenge files. Change `alias`to the actual path.
        #
        # location ^~ "/.well-known/acme-challenge/" {
        #     default_type   "text/plain";
        #     alias          /mnt/acme/;
        #     allow          all;
        # }

        # Include the OpenADMS Server API and HTTP status code configuration.
        include openadms-server/api.conf;
        include openadms-server/status.conf;
    }
}
